version: "3.9"

services:
  cassandra:
    container_name: story-platform-cassandra
    image: cassandra:4.1
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=512M"
      - "HEAP_NEWSIZE=256M"
    restart: on-failure
    volumes:
      - cassandra_data:/var/lib/cassandra

  redis-1:
    container_name: story-platform-redis
    image: redis:6.0
    command: redis-server --port 6380
    ports:
      - '6380:6380'
    restart: on-failure
    volumes:
      - redis_data:/data

  zookeeper:
    container_name: story-platform-zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"
    restart: on-failure
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    container_name: story-platform-kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CREATE_TOPICS: "subscription_v1:3:1,post_v1:3:1,subscriber_distributor_v1:20:1"
    restart: on-failure
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-manager:
    container_name: kafka-manager
    image: hlebalbau/kafka-manager:stable
    depends_on:
      - kafka
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "random-secret"
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    restart: on-failure
    ports:
      - "9000:9000"

volumes:
  cassandra_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local
