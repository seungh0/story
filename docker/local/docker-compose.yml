services:
  cassandra:
    image: cassandra:5.0
    container_name: story-cassandra-local
    ports:
      - "9042:9042"
#      - "7199:7199"
#      - "7000:7000"
#      - "7001:7001"
#      - "9160:9160"
    environment:
      - "MAX_HEAP_SIZE=512M"
      - "HEAP_NEWSIZE=256M"
      - "CASSANDRA_SEEDS=cassandra"
      - "CASSANDRA_CLUSTER_NAME=story-local"
      - "CASSANDRA_NUM_TOKENS=16"
      - "CASSANDRA_DC=dc1"
      - "CASSANDRA_RACK=rack1"
      - "CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch"
    restart: unless-stopped
    networks:
      - story-local-network
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./conf/docker-entrypoint.sh:/docker-entrypoint.sh
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    stop_grace_period: 3s

#  cassandra-reaper:
#    image: thelastpickle/cassandra-reaper:master
#    environment:
#      - "REAPER_CASS_KEYSPACE=reaper"
#      - "REAPER_STORAGE_TYPE=cassandra"
#      - "REAPER_CASS_CLUSTER_NAME=pickle-db"
#      - "REAPER_CASS_CONTACT_POINTS=[cassandra]"
#      - "LOCAL_JMX=no"
#    restart: unless-stopped
#    networks:
#      - story-local-network
#    links:
#      - cassandra:cassandra
#    ports:
#      - "28080:8080"
#      - "28081:8081"
#    depends_on:
#      cassandra:
#        condition: service_healthy

  redis:
    image: redis:7.2-alpine
    container_name: story-redis-local
    command: redis-server --port 6379 --appendonly yes
    ports:
      - '6380:6379'
    restart: unless-stopped
    networks:
      - story-local-network
    volumes:
      - redis_data1:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    stop_grace_period: 3s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: story-zookeeper-local
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    restart: unless-stopped
    networks:
      - story-local-network
    volumes:
      - zookeeper_data1:/var/lib/zookeeper/data
      - zookeeper_log1:/var/lib/zookeeper/log
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    stop_grace_period: 3s

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: story-kafka-local
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    restart: unless-stopped
    networks:
      - story-local-network
    volumes:
      - kafka_data1:/var/lib/kafka/data
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    stop_grace_period: 3s

  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    platform: linux/amd64
    container_name: story-kafka-manager-local
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "random-secret"
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    restart: unless-stopped
    networks:
      - story-local-network

volumes:
  cassandra_data:
    driver: local
  redis_data1:
    driver: local
  kafka_data1:
    driver: local
  zookeeper_data1:
    driver: local
  zookeeper_log1:
    driver: local

networks:
  story-local-network:
    driver: bridge
